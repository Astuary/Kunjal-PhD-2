{"componentChunkName":"component---src-pages-repositories-js","path":"/repositories/","result":{"data":{"githubData":{"data":{"viewer":{"name":"Kunjal Panchal","avatarUrl":"https://avatars.githubusercontent.com/u/32832266?u=edacdeefbe47b1815085878d3197e0b7bb7be384&v=4","repositories":{"nodes":[{"name":"ZombieGame","description":"A 2D roguelike zombie shooter game made in C++","homepageUrl":null,"resourcePath":"/Astuary/ZombieGame","forkCount":0,"createdAt":"2018-03-03T07:28:10Z","updatedAt":"2018-03-03T07:58:06Z","languages":{"edges":[{"node":{"name":"C++","color":"#f34b7d"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"GameEngine","description":"Game engine made in C++","homepageUrl":null,"resourcePath":"/Astuary/GameEngine","forkCount":0,"createdAt":"2018-03-21T15:56:09Z","updatedAt":"2018-03-21T16:03:52Z","languages":{"edges":[{"node":{"name":"C++","color":"#f34b7d"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"Battleships","description":"A game made in Java in first half of 2018 but forgot to put it here","homepageUrl":null,"resourcePath":"/Astuary/Battleships","forkCount":0,"createdAt":"2018-09-08T14:51:16Z","updatedAt":"2018-09-08T15:12:31Z","languages":{"edges":[{"node":{"name":"Java","color":"#b07219"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"VectorGraphicsEditor","description":"A vector graphics editor made in C++ for my Computer Graphics course.","homepageUrl":null,"resourcePath":"/Astuary/VectorGraphicsEditor","forkCount":0,"createdAt":"2018-11-11T05:08:44Z","updatedAt":"2018-11-11T05:14:21Z","languages":{"edges":[{"node":{"name":"C++","color":"#f34b7d"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"React_Portfolio_Website","description":"A simple portfolio website using React.js and Firebase.","homepageUrl":"","resourcePath":"/bharat029/React_Portfolio_Website","forkCount":0,"createdAt":"2019-05-06T12:24:43Z","updatedAt":"2020-02-03T04:07:37Z","languages":{"edges":[{"node":{"name":"JavaScript","color":"#f1e05a"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"Kunjal-BE","description":"Portfolio Website - During BE","homepageUrl":"","resourcePath":"/Astuary/Kunjal-BE","forkCount":0,"createdAt":"2019-05-12T03:48:39Z","updatedAt":"2021-06-07T00:12:40Z","languages":{"edges":[{"node":{"name":"JavaScript","color":"#f1e05a"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"PhotometricStereo","description":"A basic shape-from-shading algorithm as described in Richard Szeliski. This is also described in the “shape from shading” section (Sec 2.2) in Forsyth and Ponce book. The input to the algorithm is a set of photographs taken with known lighting directions and the output of the algorithm is the albedo (paint), normal directions, and the height map. The data/ photometricStereo directory consists of 64 images each of four subjects from the Yale Face database. The light source directions are encoded in the file names.","homepageUrl":null,"resourcePath":"/Astuary/PhotometricStereo","forkCount":1,"createdAt":"2019-11-09T21:25:00Z","updatedAt":"2019-11-09T21:28:48Z","languages":{"edges":[{"node":{"name":"MATLAB","color":"#e16737"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"ProkudinAlignment","description":"Take photographs of each plate and generate a color image by aligning them. The easiest way to align the plates is to exhaustively search over a window of possible displacements, say [-15,15] pixels, score each one using some image matching metric, and take the displacement with the best score. There is a number of possible metrics that one could use to score how well the images match.","homepageUrl":null,"resourcePath":"/Astuary/ProkudinAlignment","forkCount":0,"createdAt":"2019-11-09T21:30:12Z","updatedAt":"2019-11-09T21:34:10Z","languages":{"edges":[{"node":{"name":"MATLAB","color":"#e16737"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"ColorImageDemosaicing","description":"In digital cameras the red, blue, and green sensors are interlaced in the Bayer pattern. The missing values are interpolated to obtain a full color image. In this project, I implemented several interpolation algorithms.","homepageUrl":null,"resourcePath":"/Astuary/ColorImageDemosaicing","forkCount":0,"createdAt":"2019-11-09T21:41:02Z","updatedAt":"2019-11-09T21:41:43Z","languages":{"edges":[{"node":{"name":"C++","color":"#f34b7d"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"DepthFromDisparity","description":"I used a pair of images to compute a depth image of the scene. I did this by computing a disparity map. A disparity map is an image that stores the displacement that leads every pixel in an image X to its corresponding pixel in the image. The depth image is inversely proportional to the disparity.","homepageUrl":null,"resourcePath":"/Astuary/DepthFromDisparity","forkCount":0,"createdAt":"2019-11-09T21:42:41Z","updatedAt":"2019-11-09T21:43:56Z","languages":{"edges":[{"node":{"name":"C++","color":"#f34b7d"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"ImageDenoising","description":"Evaluated two simple denoising algorithms, namely Gaussian filtering and median filtering. In addition, also implemented a more advanced algorithm based on nonlocal means.","homepageUrl":null,"resourcePath":"/Astuary/ImageDenoising","forkCount":0,"createdAt":"2019-11-09T21:47:53Z","updatedAt":"2019-11-09T21:48:47Z","languages":{"edges":[{"node":{"name":"MATLAB","color":"#e16737"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"TextureSynthesis","description":"A simple approach for generating a texture is to randomly tile the target image using patches from a source image. It results in an image with artifacts around the edge of the tiles. This is because the tiles do not align well. The approach of Efros and Leung avoids this by generating the ouput, one pixel at a time, by matching the local neighborhood of the pixel in the generated image and source image. The random tiling approach works reasonably well for some textures and is much faster than the pixel-by-pixel synthesis approach. However, it may have visible artifacts at the border. The “Image Quilting” approach from Efros and Freeman, proposes a way to minimize these by picking tiles that align well along the boundary (like solving a jigsaw puzzle).","homepageUrl":null,"resourcePath":"/Astuary/TextureSynthesis","forkCount":0,"createdAt":"2019-11-09T21:51:49Z","updatedAt":"2019-11-09T21:52:14Z","languages":{"edges":[{"node":{"name":"MATLAB","color":"#e16737"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"BlobDetection","description":"Built a Laplacian scale space, starting with some initial scale and going for n iterations. Performed/ non-maximum suppression in scale space. Displayed resulting circles at their characteristic scales for points above a threshold. ","homepageUrl":null,"resourcePath":"/Astuary/BlobDetection","forkCount":0,"createdAt":"2019-11-09T21:56:04Z","updatedAt":"2019-11-09T21:56:45Z","languages":{"edges":[{"node":{"name":"MATLAB","color":"#e16737"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"PanoramicStitching","description":"Implemented the RANSAC algorithm to stitch two images. The input to the algorithm are two images which are related by an unknown transformation. I used the blobs detector implemented to extract keypoints and extract feature descriptors on them. Then estimated an affine transformation using feature matching and RANSAC to produce a combined image.","homepageUrl":null,"resourcePath":"/Astuary/PanoramicStitching","forkCount":0,"createdAt":"2019-11-09T22:00:33Z","updatedAt":"2019-11-09T22:01:14Z","languages":{"edges":[{"node":{"name":"MATLAB","color":"#e16737"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"ComputerVisionProblems","description":"Answers and Explanations to some Computer Vision Problems including: Radiometry, Light, Color, Image Formation, Optical Flow, Image modeling, Linear Filtering, Image Filtering, Matching and Alignment, Recognition using K-Means Clustering","homepageUrl":null,"resourcePath":"/Astuary/ComputerVisionProblems","forkCount":0,"createdAt":"2019-11-09T22:09:00Z","updatedAt":"2019-11-23T14:13:32Z","languages":{"edges":[]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"ModernComputerArchitectureResearchReviews","description":"My reviews of the research published for computer architecture which includes: Methodology, Experience, Wearout, Memory, Cache, Multithreading, Prediction, Pipelining, Instruction-level Parallelism, Branch Prediction, Virtualization, Secondary Storage, Security, Parallelism, Data Parallelism, Data Centers","homepageUrl":null,"resourcePath":"/Astuary/ModernComputerArchitectureResearchReviews","forkCount":0,"createdAt":"2019-11-09T22:33:03Z","updatedAt":"2019-12-10T09:43:57Z","languages":{"edges":[]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"OptimizedModels","description":"Regularized and Augmented Linear Regression, Logistic Regression with Huber Loss, Geometric Regression, Support Vector Classifiers, Neural Network with Adam Optimizer and Stochastic Gradient Descent & CNN with Elastic Deformation; all these models are implemented from scratch using NumPy, SciPy, Scikit-learn and PyTorch. ","homepageUrl":null,"resourcePath":"/Astuary/OptimizedModels","forkCount":0,"createdAt":"2019-11-09T23:42:44Z","updatedAt":"2021-01-02T00:54:39Z","languages":{"edges":[{"node":{"name":"Python","color":"#3572A5"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"HandcraftedImageRepresentation","description":"Implemented three different image representations for MNIST dataset: Raw Pixels, Histogram of Gradients and Local Binary Patterns ","homepageUrl":null,"resourcePath":"/Astuary/HandcraftedImageRepresentation","forkCount":0,"createdAt":"2019-12-01T16:03:41Z","updatedAt":"2019-12-01T16:05:59Z","languages":{"edges":[{"node":{"name":"Python","color":"#3572A5"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"DeepImagePrior","description":"Denoising images with 1. AutoEncoder with Batch Normalization and Bilinear Upsampling and with 2. Deeper Architectures, those with Skip Connections, as well as Averaging the Results across iterations. ","homepageUrl":null,"resourcePath":"/Astuary/DeepImagePrior","forkCount":0,"createdAt":"2019-12-04T13:33:14Z","updatedAt":"2019-12-05T10:08:16Z","languages":{"edges":[{"node":{"name":"Python","color":"#3572A5"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"ScaledAndJitteredMNISTClassifier","description":"Classifying MNIST normal, scaled and jittered dataset with Multiclass Logistic Regression and MatConvNet CNNs","homepageUrl":null,"resourcePath":"/Astuary/ScaledAndJitteredMNISTClassifier","forkCount":0,"createdAt":"2019-12-07T14:03:14Z","updatedAt":"2019-12-07T14:05:47Z","languages":{"edges":[{"node":{"name":"MATLAB","color":"#e16737"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"LSTMVariantsForTimeSeriesForecasting","description":"I have used the ExtraSensory data set. This is a human activity recognition data set containing data from 60 individuals. The task that I will focus on, is probabilistic activity forecasting. Given a sub-dataframe consisting of between one and 30 consecutive observations for a single individual and a timestamp value t, the objective is to predict the (log) probability that each of the five labels (label:LYING_DOWN, label:SITTING, label:FIX_walking, label:TALKING, label:OR_standing) is active (e.g., takes the value 1) at the future specified time, t.","homepageUrl":null,"resourcePath":"/Astuary/LSTMVariantsForTimeSeriesForecasting","forkCount":0,"createdAt":"2019-12-08T11:01:26Z","updatedAt":"2019-12-18T18:39:37Z","languages":{"edges":[{"node":{"name":"Python","color":"#3572A5"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"VideoToSeamlessGIFs","description":"From the original Microsoft paper on \"Video Textures\", here the goal was to improve distance metric by switching from a crude sum of squared distance to most sophisticated wavelet-based distance; add intensity normalization, cross-fading and morphing to the suggested basic algorithm. We also experiment on the trade-off between variety and smoothness.","homepageUrl":null,"resourcePath":"/Astuary/VideoToSeamlessGIFs","forkCount":0,"createdAt":"2019-12-13T08:55:34Z","updatedAt":"2019-12-13T08:58:03Z","languages":{"edges":[]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"HadoopExamples","description":"Experimenting with and Learning Hadoop, Sqoop, Flume, Pig, Hive and NoSQL HBase. Examples include 1. Weather Analysis on Austin Weather Report; 2.  Last.FM and 3. Twitter","homepageUrl":"","resourcePath":"/Astuary/HadoopExamples","forkCount":0,"createdAt":"2020-01-03T21:50:10Z","updatedAt":"2020-01-06T09:53:14Z","languages":{"edges":[{"node":{"name":"Java","color":"#b07219"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"WhatsappDataAnalysis","description":"Programs to analyze whatsapp exported chat data in various ways. Currently: Chat Frequency between Two people with respect to days","homepageUrl":null,"resourcePath":"/Astuary/WhatsappDataAnalysis","forkCount":0,"createdAt":"2020-01-07T12:34:59Z","updatedAt":"2020-02-01T23:13:57Z","languages":{"edges":[{"node":{"name":"Python","color":"#3572A5"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"AdvancedAlgorithms","description":"This repository contains detailed description of solutions of the chosen problems from the book \"Introduction to Algorithms\" by Cormen, Leiserson, Rivest, and Stein.","homepageUrl":null,"resourcePath":"/Astuary/AdvancedAlgorithms","forkCount":0,"createdAt":"2020-02-02T20:32:25Z","updatedAt":"2020-02-02T20:44:34Z","languages":{"edges":[]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"Robotics","description":"Developed a 9 DoF robot in a 2D simulatory environment with arm kinematics, vision and search tracking, and path planning where all the mathematics and physics were implemented with C/C++ libraries. Familiarized self with nonlinear system of algebraic equations and Newton’s Laws on dynamics to solve motion, kinematics and movements related problems for the robot.","homepageUrl":"","resourcePath":"/Astuary/Robotics","forkCount":0,"createdAt":"2020-02-05T21:44:55Z","updatedAt":"2020-08-13T17:29:33Z","languages":{"edges":[{"node":{"name":"C","color":"#555555"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"Hackher2020","description":"Project for HackHer413 2020","homepageUrl":null,"resourcePath":"/chuang1990/Hackher2020","forkCount":0,"createdAt":"2020-02-08T17:54:57Z","updatedAt":"2020-02-09T12:58:27Z","languages":{"edges":[{"node":{"name":"Python","color":"#3572A5"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"BoseSoundTouchAPI","description":"Created at Hack(h)er413 2020. Won \"Best Use of the Bose API\" by Bose and \"Best Hack for Making your Home Accessible\" by Wayfair","homepageUrl":null,"resourcePath":"/Astuary/BoseSoundTouchAPI","forkCount":1,"createdAt":"2020-02-10T22:44:34Z","updatedAt":"2020-02-10T23:12:33Z","languages":{"edges":[{"node":{"name":"Python","color":"#3572A5"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"ALASKA2","description":null,"homepageUrl":null,"resourcePath":"/Astuary/ALASKA2","forkCount":0,"createdAt":"2020-06-04T10:18:00Z","updatedAt":"2020-06-17T11:18:03Z","languages":{"edges":[{"node":{"name":"Jupyter Notebook","color":"#DA5B0B"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"Kunjal-MS","description":"My portfolio website - During MS","homepageUrl":"","resourcePath":"/Astuary/Kunjal-MS","forkCount":0,"createdAt":"2020-07-11T02:58:21Z","updatedAt":"2021-06-07T00:12:00Z","languages":{"edges":[{"node":{"name":"JavaScript","color":"#f1e05a"}}]},"licenseInfo":{"name":"MIT License"},"stargazers":{"totalCount":0}},{"name":"PingMyFeeling","description":"EMPath project.","homepageUrl":"","resourcePath":"/Astuary/PingMyFeeling","forkCount":0,"createdAt":"2020-07-23T20:19:13Z","updatedAt":"2021-06-06T23:40:28Z","languages":{"edges":[{"node":{"name":"Python","color":"#3572A5"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"Less-Than-Three","description":"Repository for EMPath Makethon Program  ","homepageUrl":null,"resourcePath":"/karashily/Less-Than-Three","forkCount":0,"createdAt":"2020-07-24T15:31:08Z","updatedAt":"2020-11-14T16:47:44Z","languages":{"edges":[{"node":{"name":"JavaScript","color":"#f1e05a"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"Gpt-2-compat-tf2","description":null,"homepageUrl":null,"resourcePath":"/namelessCrusader/Gpt-2-compat-tf2","forkCount":0,"createdAt":"2020-09-25T17:57:45Z","updatedAt":"2020-10-25T18:22:03Z","languages":{"edges":[{"node":{"name":"Python","color":"#3572A5"}}]},"licenseInfo":{"name":"Other"},"stargazers":{"totalCount":0}},{"name":"ResearchPapers","description":"A common place to put all my academic papers.","homepageUrl":null,"resourcePath":"/Astuary/ResearchPapers","forkCount":0,"createdAt":"2020-10-05T16:20:27Z","updatedAt":"2020-12-13T19:18:49Z","languages":{"edges":[]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"AspectBasedSentimentAnalysis","description":"Data augmentation for sentiment analysis through synonym swapping, and smart masking.","homepageUrl":"","resourcePath":"/Astuary/AspectBasedSentimentAnalysis","forkCount":0,"createdAt":"2020-11-01T06:35:46Z","updatedAt":"2021-06-06T23:40:07Z","languages":{"edges":[{"node":{"name":"Jupyter Notebook","color":"#DA5B0B"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"TourItYourself","description":"HackUMass project on Geofencing for tourist safety","homepageUrl":"","resourcePath":"/Astuary/TourItYourself","forkCount":0,"createdAt":"2020-12-19T00:55:29Z","updatedAt":"2021-06-06T23:38:39Z","languages":{"edges":[]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"InnovAIte","description":"SureStart 2021 - Makeathon Project","homepageUrl":"","resourcePath":"/TeamInnovAIte/InnovAIte","forkCount":0,"createdAt":"2021-03-08T20:19:27Z","updatedAt":"2021-03-21T01:31:54Z","languages":{"edges":[{"node":{"name":"JavaScript","color":"#f1e05a"}}]},"licenseInfo":null,"stargazers":{"totalCount":0}},{"name":"Kunjal","description":"Portfolio Website - PhD","homepageUrl":null,"resourcePath":"/Astuary/Kunjal","forkCount":0,"createdAt":"2021-06-08T16:14:06Z","updatedAt":"2021-06-08T16:17:24Z","languages":{"edges":[{"node":{"name":"JavaScript","color":"#f1e05a"}}]},"licenseInfo":{"name":"Other"},"stargazers":{"totalCount":0}},{"name":"SkinCancer","description":"Final Year Project on Skin Cancer Detection using Matlab Image Processing Toolbox","homepageUrl":null,"resourcePath":"/Astuary/SkinCancer","forkCount":3,"createdAt":"2019-05-23T09:17:31Z","updatedAt":"2019-12-30T08:31:12Z","languages":{"edges":[{"node":{"name":"MATLAB","color":"#e16737"}}]},"licenseInfo":null,"stargazers":{"totalCount":1}},{"name":"MultimodalFusion","description":"A novel multimodal fusion model to classify 6 classes of emotions from visual, verbal, and vocal features of a person’s speech in CMU-MOSEI dataset.","homepageUrl":"","resourcePath":"/Astuary/MultimodalFusion","forkCount":0,"createdAt":"2020-09-18T22:13:25Z","updatedAt":"2020-12-27T05:35:06Z","languages":{"edges":[{"node":{"name":"Jupyter Notebook","color":"#DA5B0B"}}]},"licenseInfo":null,"stargazers":{"totalCount":1}}]}}}}},"pageContext":{}},"staticQueryHashes":["3649515864","63159454"]}