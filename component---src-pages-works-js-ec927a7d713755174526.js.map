{"version":3,"sources":["webpack:///./src/pages/works.js"],"names":["WorkIndex","works","data","allMarkdownRemark","edges","title","className","map","node","frontmatter","fields","slug","key","to","fluid","image","childImageSharp","categories","tag","index","period","style","boxShadow","dangerouslySetInnerHTML","__html","description","excerpt","tags"],"mappings":"8FAAA,qGAkEeA,UA3DG,SAAC,GAAc,IACzBC,EADwB,EAAXC,KACAC,kBAAkBC,MAErC,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,oBACX,kBAAC,IAAD,KACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAUC,UAAU,aAApB,gCAIA,kBAAC,IAAD,CAAiBA,UAAU,WACxBL,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACRH,EAAQG,EAAKC,YAAYJ,OAASG,EAAKE,OAAOC,KAClD,OACE,kBAAC,IAAD,CAAUC,IAAKJ,EAAKE,OAAOC,MACzB,yBAAKL,UAAU,SACb,yBAAKA,UAAU,iBACb,kBAAC,OAAD,CAAMO,GAAIL,EAAKE,OAAOC,MACpB,kBAAC,IAAD,CAAKG,MAAON,EAAKC,YAAYM,MAAMC,gBAAgBF,MAAOT,MAAM,kBAItE,yBAAKC,UAAU,WACb,gCACE,6BACGE,EAAKC,YAAYQ,WAAWV,KAAI,SAACW,EAAKC,GAAN,OAAiB,kBAAC,IAAD,CAAUP,IAAKO,GAAQD,OACrE,6BACN,kBAAC,IAAD,KAASV,EAAKC,YAAYW,QAC1B,kBAAC,IAAD,KACE,kBAAC,OAAD,CAAMd,UAAU,0BAA0Be,MAAO,CAAEC,UAAU,QAAWT,GAAIL,EAAKE,OAAOC,MACrFN,KAKL,kBAAC,IAAD,CACEkB,wBAAyB,CACvBC,OAAQhB,EAAKC,YAAYgB,aAAejB,EAAKkB,WAGjD,6BACGlB,EAAKC,YAAYkB,KAAKpB,KAAI,SAACW,EAAKC,GAAN,OAAiB,kBAAC,IAAD,CAAKP,IAAKO,GAAQD","file":"component---src-pages-works-js-ec927a7d713755174526.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport {Tag, ContainerLayout, WorkPost, Category, Intro, SubTitle, Title, Text, Period} from \"../components/common\"\r\n\r\nconst WorkIndex = ({ data }) => {\r\n  const works = data.allMarkdownRemark.edges\r\n\r\n  return (\r\n    <>\r\n      <Layout> \r\n        <SEO title=\"Work Experience\" />\r\n        <Intro>\r\n          <ContainerLayout>\r\n\r\n            <SubTitle className=\"text-dark\">\r\n              Professional Work Experience\r\n            </SubTitle>\r\n\r\n            <ContainerLayout className=\"wrapper\">\r\n              {works.map(({ node }) => {\r\n              const title = node.frontmatter.title || node.fields.slug\r\n                return (\r\n                  <WorkPost key={node.fields.slug}>\r\n                    <div className=\"media\">\r\n                      <div className=\"image-wrapper\">\r\n                        <Link to={node.fields.slug}>\r\n                          <Img fluid={node.frontmatter.image.childImageSharp.fluid} title=\"work title\" />\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                      <header>\r\n                        <div>\r\n                          {node.frontmatter.categories.map((tag, index) => (<Category key={index}>{tag}</Category>))}\r\n                        </div><br/>\r\n                        <Period>{node.frontmatter.period}</Period>\r\n                        <Title>\r\n                          <Link className=\"text-primary lined-link\" style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                            {title}\r\n                          </Link>\r\n                        </Title>\r\n                        \r\n                      </header>\r\n                        <Text\r\n                          dangerouslySetInnerHTML={{\r\n                            __html: node.frontmatter.description || node.excerpt,\r\n                          }}\r\n                        />\r\n                        <div>\r\n                          {node.frontmatter.tags.map((tag, index) => (<Tag key={index}>{tag}</Tag>))}\r\n                        </div>\r\n                    </div>\r\n                  </WorkPost>\r\n                )\r\n              })}\r\n            </ContainerLayout>\r\n          </ContainerLayout>\r\n        </Intro>\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WorkIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"/(works)/\"}}, sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 600, quality: 100) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n            tags\r\n            categories\r\n            period\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}